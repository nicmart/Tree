<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.6.0@e784128902dfe01d489c4123d69918a9f3c1eac5">
  <file src="src/Builder/NodeBuilder.php">
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <ParamNameMismatch>
      <code>$value1</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Builder/NodeBuilderInterface.php">
    <PossiblyUnusedReturnValue>
      <code>static</code>
      <code>static</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Node/NodeInterface.php">
    <PossiblyUnusedReturnValue>
      <code>mixed</code>
      <code>static</code>
      <code>static</code>
      <code>static</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Node/NodeTrait.php">
    <ArgumentTypeCoercion>
      <code>$heights</code>
    </ArgumentTypeCoercion>
    <LessSpecificImplementedReturnType>
      <code>array</code>
      <code>array</code>
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code>$value</code>
    </MissingParamType>
    <MixedArgument>
      <code>$child</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$child</code>
      <code>$child</code>
      <code>$child</code>
      <code>$child</code>
      <code>$heights[]</code>
      <code>$size</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>int</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>getHeight</code>
      <code>getSize</code>
      <code>setParent</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$child-&gt;getSize()</code>
      <code>\max($heights)</code>
    </MixedOperand>
    <MoreSpecificReturnType>
      <code>?static</code>
    </MoreSpecificReturnType>
    <PossiblyNullReference>
      <code>getChildren</code>
      <code>getChildren</code>
      <code>getDepth</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Visitor/PostOrderVisitor.php">
    <MixedArgument>
      <code>$child-&gt;accept($this)</code>
    </MixedArgument>
    <MixedReturnTypeCoercion>
      <code>$nodes</code>
      <code>array&lt;int, NodeInterface&gt;</code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/Visitor/PreOrderVisitor.php">
    <MixedArgument>
      <code>$child-&gt;accept($this)</code>
    </MixedArgument>
    <MixedReturnTypeCoercion>
      <code>$nodes</code>
      <code>array&lt;int, NodeInterface&gt;</code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/Visitor/YieldVisitor.php">
    <MixedArgument>
      <code>$child-&gt;accept($this)</code>
    </MixedArgument>
    <MixedReturnTypeCoercion>
      <code>$yield</code>
      <code>array&lt;int, NodeInterface&gt;</code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="test/Unit/Builder/NodeBuilderTest.php">
    <ArgumentTypeCoercion>
      <code>'Tree\Node\Node'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>'a'</code>
      <code>'a'</code>
      <code>'a'</code>
      <code>'b'</code>
      <code>'b'</code>
      <code>'b'</code>
      <code>'c'</code>
    </InvalidArgument>
    <InvalidDocblock>
      <code>array[Node]</code>
    </InvalidDocblock>
    <MissingClosureReturnType>
      <code>static function (Node $node) {</code>
    </MissingClosureReturnType>
    <PossiblyNullReference>
      <code>leaf</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Unit/Node/NodeTest.php">
    <TypeDoesNotContainType>
      <code>assertSame</code>
    </TypeDoesNotContainType>
  </file>
</files>
