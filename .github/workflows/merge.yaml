# https://docs.github.com/en/actions

name: "Merge"

on: # yamllint disable-line rule:truthy
  workflow_run:
    types:
      - "completed"
    workflows:
      - "Integrate"

jobs:
  merge:
    name: "Merge"

    runs-on: "ubuntu-latest"

    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.actor == 'dependabot[bot]' && (
        startsWith(github.event.workflow_run.head_commit.message, 'composer(deps-dev)') ||
        startsWith(github.event.workflow_run.head_commit.message, 'github-actions(deps)')
      )

    steps:
      - name: "Determine pull request number"
        uses: "actions/github-script@v6.3.1"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            if (
              context.eventName == 'pull_request' ||
              context.eventName == 'pull_request_target'
            ) {
              core.exportVariable("PULL_REQUEST_NUMBER", context.payload.pull_request.number);

              return;
            }

            if (context.eventName == 'workflow_run') {
              core.exportVariable("PULL_REQUEST_NUMBER", context.payload.workflow_run.pull_requests[0].number);

              return;
            }

            core.setFailed(`Unable to determine the pull request number for event "${context.eventName}"`);

      - name: "Merge pull request"
        uses: "actions/github-script@v6.3.1"
        env:
          MERGE_METHOD: "${{ inputs.merge-method }}"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            if (!process.env.PULL_REQUEST_NUMBER) {
              core.setFailed("The environment variable PULL_REQUEST_NUMBER is not defined.");

              return;
            }

            try {
              await github.rest.pulls.merge({
                merge_method: "merge",
                owner: context.repo.owner,
                pull_number: process.env.PULL_REQUEST_NUMBER,
                repo: context.repo.repo,
              });
            } catch (error) {
              core.setFailed(error.message);
            }      -
